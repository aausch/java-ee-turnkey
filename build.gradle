apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0-SNAPSHOT'

def jettyVersion = '7.5.4.v20111024'
def defaultEncoding = "UTF-8"
def mainClass = "no.steria.turnkey.main.TurnkeyMain"
System.setProperty("file.encoding", defaultEncoding)

compileJava {
    options.encoding = defaultEncoding  // affects *.java under src/main/java
                                        // alternative: "file.encoding" property
}
compileTestJava {
    options.encoding = defaultEncoding  // affects *.java under src/test/java
}

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    compile 'dom4j:dom4j:1.6.1'
    compile 'joda-time:joda-time:2.1'
    compile 'com.google.guava:guava:11.0.2'
    compile 'org.jsoup:jsoup:1.6.1'

    compile 'org.apache.velocity:velocity:1.7'

    providedCompile 'org.slf4j:slf4j-api:1.6.4'
    providedCompile 'ch.qos.logback:logback-classic:1.0.1'
    providedCompile 'com.h2database:h2:1.3.166'
    //providedCompile 'oracle.jars:ojdbc:1.4' 
    providedCompile 'javax.servlet:servlet-api:2.5'
    providedCompile 'c3p0:c3p0:0.9.1.2'
    providedCompile("org.eclipse.jetty.aggregate:jetty-plus:$jettyVersion")
    providedCompile("org.eclipse.jetty:jetty-jndi:$jettyVersion")

    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-all:1.9.0'
    testCompile 'org.easytesting:fest-assert:1.4'
    
    // Hard choice: htmlunit is a dependency PIG!, but it works well
    testCompile 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.21.0' // 0.9.7376
    testCompile 'net.sourceforge.htmlunit:htmlunit:2.9'
    testCompile 'commons-lang:commons-lang:2.6'
}
 
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

war {
    doFirst{
        from { 
          configurations.providedCompile.collect { zipTree(it) }
        }        
        from 'build/classes/main'
        from 'build/resources/main'

        manifest {
    		attributes("version": "$version") 
    	    attributes("Main-Class": mainClass)
    	}
    }
}

task run(type: JavaExec, dependsOn:[classes]) {
    main = mainClass
    systemProperty 'personweb.http.port', '8888'
    classpath = sourceSets.main.runtimeClasspath
}

